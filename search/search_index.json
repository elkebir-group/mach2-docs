{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#mach2-documentation","title":"MACH2 Documentation","text":"<ul> <li>MACH2: A mathematical framework for inferring migration histories of metastatic cancer from clone phylogeny and the location of extant clones.</li> <li>MACH2-Viz: An interactive visual application for exploring metastasis patterns</li> </ul> <p>Image: Clone tree labeled by MACH2 (left) and inferred migration graph for Ovarian cancer (right) (data from McPherson et. al., 2016)</p>"},{"location":"#quick-start","title":"Quick Start","text":"<ul> <li>Basic Features</li> <li>Installation</li> <li>Quick Start Guide</li> </ul>"},{"location":"#tutorial","title":"Tutorial","text":"<ul> <li>Documentation</li> <li>Examples</li> </ul>"},{"location":"feature/","title":"Features","text":""},{"location":"feature/#mach2-features","title":"MACH2 Features","text":"<p>MACH2 infers migration histories of metastatic cancers given the clonal phylogeny and the location of extant clones.</p> <p>MACH2 takes as input the following:</p> <ol> <li>Input tree file : Tree file describing the input clone tree.</li> <li>Leaf labeling file : Labeling file describing the leaf labeling of input clone tree.</li> </ol> <p>And returns output in one of the following formats:</p> <ol> <li>Refined tree file : Tree file describing the output refined tree.</li> <li>Vertex labeling file : Labeling file describing the vertex labeling of the refined tree. Labels designate the anatomical location of each node.</li> <li>Refined tree DOT : Refined tree with vertex labeling in DOT format.</li> <li>Migration graph file : Multi-graph file describing the migration graph.</li> <li>Migration graph DOT : Migration graph in DOT format.</li> </ol>"},{"location":"feature/#mach2-viz-features","title":"MACH2-Viz Features","text":"<p>MACH2-Viz is an interactive visualizer that allows the user to explore migration patters inferred by MACH2. It has the following features.</p> <ul> <li>Highlight corresponding nodes: The user can highlight nodes in the clonal tree or migration graph, and nodes in the corresponding structure will highlight as well.</li> <li>Compare solutions: Users can open solutions side by side and compare them.</li> <li>Require or omit migrations: A summary panel can be opened and migration edges can be required or omitted from the list of solutions displayed.</li> <li>Examine polytomy refinement: The input clonal phylogeny can be compared against the refined phylogeny and corresponding nodes can be panned to and comapred.</li> <li>Extensibility: Users can upload their own solutions or make contributions to the home page table of example solutions.</li> <li>Backwards compatibility: Solutions from MACHINA (2018) can also be loaded into the visualizer.</li> </ul>"},{"location":"installation/","title":"Installation Guide","text":""},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python - <code>MACH2</code> requires Python 3.7 or newer.</li> <li>ILP solver - <code>MACH2</code> requires an ILP solver installed to solve PMH-TR. Currently <code>MACH2</code> only supports <code>Gurobi optimizer</code>, but we are going to add support for more ILP solvers in the future. <code>MACH2</code> requires a valid Gurobi installation and license key. The location of Gurobi should be present in <code>LD_LIBRARY_PATH</code> (linux) and <code>DYLD_LIBRARY_PATH</code> (macOS) the license key should be saved in the environment variable <code>GRB_LICENSE_KEY</code>.</li> </ul>"},{"location":"installation/#installing-mach2","title":"Installing MACH2","text":"<p>MACH2 can be installed using the following command:</p> <pre><code>pip install mach2 &amp;&amp; pip install mach2[jupyter]\n</code></pre>"},{"location":"installation/#mach2-viz","title":"MACH2-Viz","text":"<p>MACH2-Viz can simply be opened with the following link. However, there is a Python package that allows for opening MACH2-Viz in localhost directly from a Python script or Jupyter Notebook.  </p> <p>The package will be installed as a dependency when MACH2 is installed, but to install the Python package for MACH2-Viz alone, run:</p> <pre><code>pip install mach2-viz\n</code></pre>"},{"location":"quickstart/","title":"Quick Start","text":"<p>NOTE: This tutorial is better followed on a Jupyter Notebook. To use a Jupyter notebook, be sure to install MACH2 for Jupyter Notebook.</p> <p>Now that you have MACH2 and MACH2-Viz set up, you can run the following on this example dataset.</p> <ul> <li>patient1.tree</li> <li>patient1.labeling</li> </ul>"},{"location":"quickstart/#input-description","title":"Input Description","text":"<p><code>patient1.tree</code> is the edgelist of the clone phylogeny to be labeled by MACH2, and <code>patient1.labeling</code> is a labeling of extant nodes (otherwise known as the leaves of the phylogeny) designating an anatomical location for these clones. As you can see, these are in tsv format, as columns can be separated by tabs or spaces.</p>"},{"location":"quickstart/#visualizing-the-tree","title":"Visualizing the Tree","text":"<p>We visualize the tree through the following lines of Python code:</p> <p><code>In[1]:</code></p> <pre><code>import mach2\ntree = mach2.Phylogeny.from_file('patient1.tree', 'patient1.labeling')\ntree\n</code></pre> <p><code>Out[1]</code>:</p> <p></p>"},{"location":"quickstart/#computing-a-full-labeling","title":"Computing a Full Labeling","text":"<p>NOTE: Computing a full labeling using MACH2 requires an ILP solver such as Gurobi, make sure to have it installed.</p> <p>To solve the PMH-TR (Parsimonious Migration History with Tree Resolution) problem, you can run the following code:</p> <p><code>In[2]</code>:</p> <pre><code>solver = mach2.MACH(tree, primary_site='LOv')\nsolutions = solver.solve('gurobi', 30, n_threads=30)\n</code></pre> <p><code>Out[2]</code>:</p> <pre><code>Set parameter MIPGap to value 0\nSet parameter PoolSolutions to value 30\nSet parameter PoolSearchMode to value 2\nSet parameter Threads to value 30\n</code></pre>"},{"location":"quickstart/#visualizing-solutions","title":"Visualizing Solutions","text":"<p>You can visualize solutions using class methods in MACH2's library. Let's visualize the first solution returned by MACH2:</p>"},{"location":"quickstart/#visualizing-the-clone-tree","title":"Visualizing the Clone Tree","text":"<p><code>In[3]</code></p> <pre><code>solutions[0].phylogeny\n</code></pre> <p><code>Out[3]</code></p> <p></p>"},{"location":"quickstart/#visualizing-the-migration-graph","title":"Visualizing the Migration Graph","text":"<p><code>In[4]</code></p> <pre><code>solutions[0].migration_graph\n</code></pre> <p><code>Out[4]</code></p> <p></p>"},{"location":"quickstart/#opening-mach2-viz","title":"Opening MACH2-Viz","text":"<p>MACH2-Viz can be opened directly from the Jupyter Notebook via localhost through the following code</p> <p><code>In[5]</code></p> <pre><code>solutions.open_in_viz()\n</code></pre> <p>A browser window should open and display an interactive visualization of the solution space.</p>"},{"location":"tutorial/","title":"MACH2/MACH2-Viz Documentation","text":""},{"location":"tutorial/#documentation","title":"Documentation","text":"<p>To get started, see the quick start tutorial. Then, view the documentation below.</p>"},{"location":"tutorial/#mach2-documentation","title":"MACH2 Documentation","text":"<ul> <li>Input Files</li> <li>Command Line Usage</li> <li>Python Usage</li> <li>API<ul> <li>MACH</li> <li>MigrationGraph</li> <li>Phylogeny</li> <li>RefinedPhylogeny</li> <li>SolutionSet</li> </ul> </li> </ul>"},{"location":"tutorial/#mach2-viz-documentation","title":"MACH2-Viz Documentation","text":"<ul> <li>Getting Started</li> <li>Data Preparation</li> <li>Navigating the Visualizer</li> <li>Comparing Solutions</li> <li>Examining Polytomy</li> <li>Summary View</li> </ul>"},{"location":"docs/cmdline/","title":"MACH2 Command Line Usage","text":"<p>(Back)</p> <p>Along with the Jupyter Notebook/Python API usage described in the quick start guide, MACH2 can be run in command line in all platforms with Python installed.</p>"},{"location":"docs/cmdline/#input","title":"Input","text":"<p>To run MACH2 in command line, you will need the following files:</p> <ul> <li>Input tree file: Tree file describing the input clone tree. This is an edgelist file that follows a tsv format. (Example)</li> <li>Leaf labeling file: Labeling file describing the leaf labeling of input clone tree. It is in the form of a two-column csv where the first column is a node id and the second column is an anatomic labeling. (Example)</li> <li>(Optional) Coloring file: An integer mapping for anatomical locations. For visualization purposes. (Example)</li> </ul>"},{"location":"docs/cmdline/#usage","title":"Usage","text":"<pre><code>    usage: mach2 [-h] [-p PRIMARY] [-c COLORMAP] [--log] [-o OUTPUT] [-N NSOLUTIONS] [-C] [-t THREADS] [-s] [-S] clone_tree leaf_labeling\n\n    MACH2\n\n    positional arguments:\n    clone_tree            Input clone tree\n    leaf_labeling         Input leaf labeling\n\n    options:\n    -h, --help            show this help message and exit\n    -p PRIMARY, --primary PRIMARY\n                            Primary anatomical site\n    -c COLORMAP, --colormap COLORMAP\n                            Color map file\n    --log                 Outputs Gurobi logging\n    -o OUTPUT, --output OUTPUT\n                            Output folder\n    -N NSOLUTIONS, --nsolutions NSOLUTIONS\n                            Maximum number of solutions retained\n    -C, --count_solutions\n                            Only prints the number of solutions (default=False)\n    -t THREADS, --threads THREADS\n                            Number of threads\n    -s, --suboptimal      Returns suboptimal solutions without duplicates, may be slow (default=False)\n    -S, --seeding_sites   Minimizes the number of seeding sites too (default=False)\n</code></pre>"},{"location":"docs/cmdline/#example","title":"Example","text":"<pre><code>mach2 data/mcpherson_2016/patient1.tree data/mcpherson_2016/patient1.labeling -c data/mcpherson_2016/coloring.txt\n</code></pre>"},{"location":"docs/inputs/","title":"Inputs","text":""},{"location":"docs/inputs/#input-files","title":"Input Files","text":"<p>(Back)</p>"},{"location":"docs/inputs/#tree-file","title":"Tree File","text":"<p>MACH2 requires a file describing the input clonal phylogeny. This is in the form of an edgelist describing a tree (this means that there must not be multiple components or cycles in the edgelist). This is in a tsv formatted file with two columns. Entries are separated by spaces. See the example below:</p> <pre><code>A A1\nA A2\nA A3\nA A4\nA A5\nA A6\nB B1\nB B2\nB B3\nB B4\nB B5\nD D1\nF F1\nH H1\nH H2\nA B\nA D\nB C1\nD F\nD E1\nF H\nF G1\nH I1\n</code></pre> <p>(McPherson 2016)</p>"},{"location":"docs/inputs/#labeling-file","title":"Labeling File","text":""},{"location":"docs/inputs/#coloring-file","title":"Coloring File","text":""}]}